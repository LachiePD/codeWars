function addStrings(num1, num2) {
    let result = [];
    let carry = 0;
    let i = num1.length - 1;
    let j = num2.length - 1;
    
    while (i >= 0 || j >= 0 || carry) {
        let digit1 = i >= 0 ? parseInt(num1[i]) : 0;
        let digit2 = j >= 0 ? parseInt(num2[j]) : 0;
        
        let sumDigits = digit1 + digit2 + carry;
        carry = Math.floor(sumDigits / 10);
        let digitSum = sumDigits % 10;
        result.push(digitSum);
        
        i--;
        j--;
    }
    
    return result.reverse().join('');
}

// Example usage:
let num1 = "123456789012345678901234567890";
let num2 = "987654321098765432109876543210";
console.log(addStrings(num1, num2));  // Output: "1111111110111111111011111111100"




Pulled this from chatgpt. Basically the solution is to iterate through each string, adding the sum of the two digits and also the 'carry'. The end result is pushed into an array. 
Note the push() is used to retain the right order of the ints.

Modulo is used a lot to ensure that only one int is added to the array at a time.

The carry is calculated from adding the two digits, and finding out the amount of times the sum goes over 9, via a math.floor() function. 

